name: Build and Deploy

on:
  push:
    branches:
      - development  # Este flujo se activará cuando haya un push a la rama `development`

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout a la rama `development` para hacer el build
    - name: Checkout development branch
      uses: actions/checkout@v3
      with:
        ref: development

    # 2. Hacer el build en la rama `development`
    - name: Build project in development
      run: |
        npm install
        npm run build  # Cambia esto si tu proceso de build es diferente

    # 3. Checkout a la rama `main` para copiar el contenido de `public/`
    - name: Checkout main branch
      uses: actions/checkout@v3
      with:
        ref: main
        # Permitir hacer cambios directamente en la rama main
        fetch-depth: 0

    # 4. Copiar el contenido de `public/` de `development` a la raíz de `main`
    - name: Copy public content from development to main
      run: |
        git fetch origin development
        git checkout development -- public  # Copiar el contenido de `public/` desde `development`
        cp -r public/* .  # Copiar todo el contenido de `public/` a la raíz de `main`
        rm -rf public  # Eliminar la carpeta `public/` después de mover el contenido

    # 5. Commit y push de los cambios en `main`
    - name: Commit and push changes to main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usa el token secreto de GitHub Actions para autenticarse
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"
        git add .
        git commit -m "Deploy from development to main"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main --force
