name: Build and Deploy

on:
  push:
    branches:
      - development  # Ejecutar cuando haya cambios en development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout a la rama development para hacer el merge
    - name: Checkout development branch
      uses: actions/checkout@v3
      with:
        ref: development

    # 2. Hacer merge de development a main (permitir historiales no relacionados)
    - name: Merge development into main
      run: |
        git fetch origin
        git checkout main
        git merge development --no-ff --allow-unrelated-histories -m "Merge development into main"

    # 3. Hacer el build en la rama main
    - name: Build project on main
      run: |
        npm install
        npm run build  # Cambia esto si tu proceso de build es diferente

    # 4. Eliminar todo excepto la carpeta public/
    - name: Clear main branch content except public
      run: |
        find . -mindepth 1 -not -name 'public' -exec rm -rf {} +  # Eliminar todo excepto `public`

    # 5. Mover el contenido de `public` a la raíz
    - name: Move public content to root
      run: |
        cp -r public/* .  # Copiar el contenido de public a la raíz
        rm -rf public  # Eliminar la carpeta public después de mover el contenido

    # 6. Confirmar y publicar los cambios en main usando un token de GitHub
    - name: Commit and push changes to main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usa el token secreto de GitHub Actions
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"
        git add .
        git commit -m "Deploy from development to main"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main --force